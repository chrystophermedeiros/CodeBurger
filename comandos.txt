--------------------------Backend----------------------
npm init -y === é utilizado para criar rapidamente um arquivo package.json em um diretório vazio do projeto

yarn add express === é usado para instalar o pacote express em um projeto Node.js usando o gerenciador de pacotes Yarn.

yarn add nodemon -D ===  usado para instalar o pacote nodemon como uma dependência de desenvolvimento (devDependency) em um projeto Node.js usando o gerenciador de pacotes Yarn.

Criar no package.json no campo scripts
abaixo do test a linha == "dev": "nodemon", logo depois mudar o caminho do main
para "src/server.js"

yarn add sucrase -D === é uma ferramenta que permite que você use recursos modernos do JavaScript (como import/export de módulos e sintaxe de classe) em seu código Node.js, mesmo que a versão do Node.js instalada em seu sistema não suporte esses recursos. Isso é útil porque você pode escrever código moderno e elegante sem se preocupar com a compatibilidade com as versões mais antigas do Node.js.

yarn add eslint -D
yarn eslint --init

cOLOCAR NAS CONFIGUÇÕES DO JSON E COLOCAR "[javascript]": { "editor.codeActionsOnSave": { "source.fixAll.eslint": true }, }, 

"[javascriptreact]": { "editor.codeActionsOnSave": { "source.fixAll.eslint": true }, },

yarn add prettier eslint-config-prettier eslint-plugin-prettier -D

yarn add sequelize
yarn add sequelize-cli -D
yarn add pg pg-hstore

------------------Migrations----------------------

yarn sequelize migration:create --name=create-users
yarn sequelize migration:create --name=create-products
yarn sequelize migration:create --name=create-categories
yarn sequelize migration:create --name=create-delete-category == deleta uma coluna de uma tabela desejeda
yarn sequelize migration:create --name=create-category-column
yarn sequelize migration:create --name=create-products-offer-column
yarn sequelize migration:create --name=create-category-column


yarn sequelize db:migrate === migra para o banco de dados
yarn sequelize db:migrate:undo === desfaz a ultima tabela
yar

------------------ Fim Migrations----------------------

yarn add yup
yarn add bcrypt
yarn add multer
yarn add jsonwebtoken

yarn add cors

yarn add mongoose


docker
docker run --name codeburguer-postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres
docker run --name mongo -p 27017:27017 -d -t mongo



SQL

SELECT * from USERS WHERE if = "32";
INSERT INTO 
USERS (ID, EMAIL, PASSOWORD, NAME)
VALUES ('5', CHRYSTOPHER312@GMAIL.COM, 1234, 'CHRYSTOPHER')



________________________Frontend___________________
npx create-react-app frontend

yarn start

---Plugind_---
yarn add eslint -D
yarn eslint --init
yarn add eslint-plugin-import-helpers -D
yarn add eslint-plugin-react-hooks -D
yarn add prettier eslint-config-prettier eslint-plugin-prettier -D

--styled componnents__
yarn add styled-components


yarn add axios